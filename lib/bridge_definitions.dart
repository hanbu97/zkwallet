// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.82.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

abstract class Native {
  Future<Platform> platform({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kPlatformConstMeta;

  Future<bool> rustReleaseMode({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRustReleaseModeConstMeta;

  Future<(String, String)> multiplyZk(
      {required int a, required int b, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kMultiplyZkConstMeta;

  Future<WalletAddress> generateWalletMulti(
      {String? password,
      required int length,
      required String lang,
      required String params,
      required String chain,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGenerateWalletMultiConstMeta;

  Future<PolkadotAddress> generateWallet(
      {required int ss58,
      String? password,
      required int length,
      required String lang,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGenerateWalletConstMeta;

  Future<WalletAddress> generateWalletFromMnemonicsMulti(
      {required String chain,
      String? password,
      required String phrase,
      required String lang,
      required String params,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGenerateWalletFromMnemonicsMultiConstMeta;

  Future<PolkadotAddress> generateWalletFromMnemonics(
      {required int ss58,
      String? password,
      required String phrase,
      required String lang,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGenerateWalletFromMnemonicsConstMeta;

  Future<List<String>> wordSuggestion(
      {required String word, required String lang, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kWordSuggestionConstMeta;
}

enum Platform {
  Unknown,
  Android,
  Ios,
  Windows,
  Unix,
  MacIntel,
  MacApple,
  Wasm,
}

class PolkadotAddress {
  final String mnemonicPhrase;
  final String miniSecretKey;
  final String publicKey;
  final String address;

  const PolkadotAddress({
    required this.mnemonicPhrase,
    required this.miniSecretKey,
    required this.publicKey,
    required this.address,
  });
}

class WalletAddress {
  final String mnemonicPhrase;
  final String secretKey;
  final String address;

  const WalletAddress({
    required this.mnemonicPhrase,
    required this.secretKey,
    required this.address,
  });
}
